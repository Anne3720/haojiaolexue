$curl = new CurlHttp();
$curl->get('http://www.example.com/');

$curl = new CurlHttp();
$curl->get('http://www.example.com/search', array(
    'q' => 'keyword',
));

$curl = new CurlHttp();
$curl->post('http://www.example.com/login/', array(
    'username' => 'myusername',
    'password' => 'mypassword',
));

$curl = new CurlHttp();
$curl->setBasicAuthentication('username', 'password');
$curl->setUserAgent('');
$curl->setReferrer('');
$curl->setHeader('X-Requested-With', 'XMLHttpRequest');
$curl->setCookie('key', 'value');
$curl->get('http://www.example.com/');

if ($curl->error) {
    echo 'Error: ' . $curl->error_code . ': ' . $curl->error_message;
}
else {
    echo $curl->response;
}

var_dump($curl->request_headers);
var_dump($curl->response_headers);

$curl = new CurlHttp();
$curl->setOpt(CURLOPT_SSL_VERIFYPEER, false);
$curl->get('https://encrypted.example.com/');

$curl = new CurlHttp();
$curl->put('http://api.example.com/user/', array(
    'first_name' => 'Zach',
    'last_name' => 'Borboa',
));

$curl = new CurlHttp();
$curl->patch('http://api.example.com/profile/', array(
    'image' => '@path/to/file.jpg',
));

$curl = new CurlHttp();
$curl->patch('http://api.example.com/profile/', array(
    'image' => new CURLFile('path/to/file.jpg'),
));

$curl = new CurlHttp();
$curl->delete('http://api.example.com/user/', array(
    'id' => '1234',
));

// Enable gzip compression and download a file.
$curl = new CurlHttp();
$curl->setOpt(CURLOPT_ENCODING , 'gzip');
$curl->download('https://www.example.com/image.png', '/tmp/myimage.png');

// Case-insensitive access to headers.
$curl = new CurlHttp();
$curl->download('https://www.example.com/image.png', '/tmp/myimage.png');
echo $curl->response_headers['Content-Type'] . "\n"; // image/png
echo $curl->response_headers['CoNTeNT-TyPE'] . "\n"; // image/png

$curl->close();

// Example access to curl object.
curl_set_opt($curl->curl, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1');
curl_close($curl->curl);